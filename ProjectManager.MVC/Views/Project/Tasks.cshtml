@using ProjectManager.Application.ProjectTask.Commands.CreateProjectTask
@using ProjectManager.Application.ProjectTask.Commands.EditProjectTask
@model ProjectManager.Application.Project.ProjectDto

@{
    var action = ViewContext.RouteData.Values["Action"]?.ToString();
    var controller = ViewContext.RouteData.Values["Controller"]?.ToString();
    ViewData["Title"] = "Tasks";
}

<div class="text-center">
    <h1>@Model.Name</h1>
</div>

<div class="">
    <div class="d-flex justify-content-center align-items-center">
        <div class="p-2">
            <a class="btn @(controller == "Project" && action == "Details" ? "btn-primary" : "btn-secondary")" style="margin: auto;" asp-area="" asp-controller="Project" asp-action="Details" asp-route-encodedName="@Model.EncodedName">Overview</a>
        </div>
        <div class="p-2">
            <a class="btn @(controller == "Project" && action == "Tasks" ? "btn-primary" : "btn-secondary")" style="margin: auto;" asp-area="" asp-controller="Project" asp-action="Tasks" asp-route-encodedName="@Model.EncodedName">Tasks</a>
        </div>
        <div class="p-2">
            <a class="btn @(controller == "Project" && action == "Index" ? "btn-primary" : "btn-secondary")" style="margin: auto;" asp-area="" asp-controller="Project" asp-action="Contributors" asp-route-encodedName="@Model.EncodedName">Contributors</a>
        </div>
    </div>
</div>

<h3 class="text-center mb-3">Tasks:</h3>
<div id="tasks" class="row" data-encoded-name="@Model.EncodedName"></div>


<div class="d-flex justify-content-center align-items-center text-center">
    @if (Model.IsEditable) {
        <partial name="_CreateProjectTask" model="new CreateProjectTaskCommand() { ProjectEncodedName = Model.EncodedName }"/>
    }
    <a asp-action="Index" class="btn btn-secondary m-1">Back to List</a>
</div>


@section Scripts {
    <script src="~/js/Project/TaskManagment.js"></script>
}